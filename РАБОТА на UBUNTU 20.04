РАБОТА на UBUNTU 20.04
1.Ставим Rider, PHPStorm, DataGrip, VSCode, Sublime, VSCode:

sudo snap install sublime-text --classic ;\
sudo snap install code --classic;\
sudo snap install rider --classic ;\
sudo snap install phpstorm --classic ;\
sudo snap install datagrip --classic

2.Автоматическое обновление лицензий JetBrains

чтобы обновлять лицензии автоматически для продуктов JetBrains
делаем скрипт, который чистит только лицензии
gedit ~/jetbrains-update-license.sh
туда пишем:

#!/bin/sh
#Удаляем лицензии на Rider, PHPStorm и DataGrip
rm ~/.config/JetBrains/PhpStorm*/eval/*.key
rm ~/.config/JetBrains/Rider*/eval/*.key
rm ~/.config/JetBrains/DataGrip*/eval/*.key

даем права на запуск
chmod +x jetbrains-update-license.sh

Добавляем в anacron задание:
sudo gedit /etc/anacrontab
добавляем в конец:
@monthly 10 jetbrains-update-license.monthly /bin/bash /home/jazzzman/jetbrains-update-license.sh

3. Установка AvaloniaUI

wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb

sudo dpkg -i packages-microsoft-prod.deb

Установка пакета SDK
sudo apt-get update; \
sudo apt-get install -y apt-transport-https && \
sudo apt-get update && \
sudo apt-get install -y dotnet-sdk-3.1

Ставим Avalonia UI:
cd ~ && mkdir AvaloniaUI && cd AvaloniaUI &&\

git clone https://github.com/AvaloniaUI/avalonia-dotnet-templates
Заходим в VSCode и в терминале набираем:
dotnet new --install ~/AvaloniaUI

Чтобы проверить, добавились ли шаблоны, используйте команду:
dotnet new --list

Чтобы создать новое приложение MVVM, вызываемое MyApp в его собственном подкаталоге, запустите:

dotnet new avalonia.mvvm -o MyApp

4. Установка Mono

Добавим репозиторий Mono в систему:
sudo apt install gnupg ca-certificates &&\
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF &&\
echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list &&\
sudo apt update &&\
sudo apt install mono-devel

УСТАНОВИТЬ LAMP В UBUNTU ВРУЧНУЮ
оригинал https://losst.ru/ustanovka-lamp-ubuntu-18-04

1.Ставим связку Apache, MariaDB, PHP и доп. библиотеки для php:

sudo apt install apache2 mariadb-server php &&\
sudo apt install php-curl php-json php-cgi php-gd php-zip php-mbstring php-xml php-xmlrpc phpmyadmin

2.Настройка файервола UWF:

sudo ufw enable && sudo ufw status &&\
sudo ufw default deny incoming && sudo ufw default allow outgoing &&\
sudo ufw allow http && sudo ufw allow https && sudo ufw allow ssh

Проверка работы apache:
sudo sh -c " echo '<?php phpinfo(); ?>' >/var/www/html/phpinfo.php"

Затем откройте адрес localhost/phpinfo.php. Если всё работает, вы должны увидеть информационную страничку.

3.Настройка Apahe
(Подробнее про настройку веб-сервера в отдельной статье https://losst.ru/ustanovka-i-nastrojka-servera-apache)

sudo a2dismod mpm_event && sudo a2dismod mpm_worker &&sudo a2enmod mpm_prefork &&sudo a2enmod rewrite

Если вы хотите использовать файлы httaccess для настроек, то необходимо в файле /etc/apache2/apache2.conf изменить значение AllowOverride с None на All для нужных местоположений, например, для /var/www:

sudo gedit /etc/apache2/apache2.conf

<Directory /var/www/>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
</Directory>

Далее необходимо перезапустить Apache:

<Directory /var/www/>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
</Directory>

Далее необходимо перезапустить Apache:

sudo systemctl restart apache2

4. Настройка PHP

По умолчанию короткие теги, обрамляющие скрипты PHP, отключены. Это может привести к тому, что некоторые скрипты, использующие эти теги, могут не выполнятся. Для включения этой возможности откройте файл:

sudo gedit /etc/php/7.4/apache2/php.ini

Найдите short_open_tag = Off и замените на:

short_open_tag = On

Вывод ошибок в PHP по умолчанию тоже отключён. Если вы хотите разрабатывать программы на этом сервере, то вам необходимо включить ошибки, иначе вместо ошибок вы будете видеть пустой экран. Для этого найдите эти строки и приведите их к такому виду:

error_reporting = E_ALL
display_errors = On

После внесения всех изменений необходимо перезапустить Apache:

sudo systemctl restart apache2

Подробнее про настройку файла php.ini смотрите здесь.\

Можно еще настроить защиту на MySQL